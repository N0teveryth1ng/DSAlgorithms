TRACKING MY PROGRESS - - -


1. ARRAYS - 
    - easy - (2 left - union find, longest subarray)
    - mid - (1 more left - prefix sum)
    - hard - ( 2 is not done) 



 - - - - - - Points To Focus - - - - - - -
  Recursion, Pointers, greedy, binary search, DP,  


2. BINARY SEARCH -
    - easy 
    - medium 
    - hard

3. Strings - 
    - Basic
    - Medium 
     [ Check the star marked Q's for further clarifics ]  - -


4.  Linked Lists - 
    - singly LL ()
    - Doubly LL 

    (-) At step 6 of LinkedList in striver's DSA sheet - LEC 4,5 Q's are not yet clear to me so keep the practice on   


    DLL - - - -  
    - - - insert head - - - 
      
      next_node.next = self.head
      self.head.prev = new_node
      self.head = new_node

    
     - - - insert tail - - -

     if not self.head:
        self.head = new_node
        return

     temp = self.head
     while temp.next:
         temp = temp.next

     temp.next = new_node
     new_node.prev = temp

     
     - - - insert Kth - - - 
     
     if k == 1:
        new_node.next = self.head
        self.head.prev = new_node
        self.head = new_node
        return

     temp = self.hard
     count = 1
     while temp and count < k-1:
        temp = temp.next
        count += 1

     if not temp:
        return

     new_node.next = temp.next
     temp.next = new_node 
     if temp.next:
        temp.next.prev = new_node



    - - -  delete kth - - - 

    if not self.head:
        return

    if k == 1:
       self.delete_tail(val)
       return

    temp = self.head
    count = 1
    while temp and count < k-1:
        temp = temp.next
        count += 1

    if not temp:
       return

   
    if temp.prev:
       temp.prev.next = temp.next 
    if temp.next:
       temp.next.prev = temp.prev  


     
     - - - - delete head - - - - 

     if not self.head:
         return

     self.head = self.head.next
     if self.head.next:
        self.head.prev = None
        return


     - - - - delete tail - - - -

     if not self.head:
         return

     temp = self.head
     while temp.next:
         temp = temp.next

     if temp.prev:
        temp.prev.next = None
     else:
        self.head = None

        

    - Arrays to DLL


